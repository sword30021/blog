{"meta":{"title":"自由的程序员","subtitle":"越努力越幸福~","description":"IT技术学习和记录","author":"妞妞骑毛驴","url":"https://sword30021.github.io/blog"},"pages":[],"posts":[{"title":"Android Studio常用插件列表(持续更新...)","slug":"Android-Studio常用插件列表-持续更新","date":"2016-09-22T08:03:39.000Z","updated":"2016-09-22T08:09:15.000Z","comments":true,"path":"2016/09/22/Android-Studio常用插件列表-持续更新/","link":"","permalink":"https://sword30021.github.io/blog/blog/2016/09/22/Android-Studio常用插件列表-持续更新/","excerpt":"","text":"引言 工欲善其事，必先利其器！作为一名苦逼的程序员，提高开发效率，可以使用节约的时间做其他事情。 1、.ignore 在Git 中想要过滤掉一些不想提交的文件，可以把相应的文件添加到.gitignore 中，而.gitignore 这个Android Studio 插件根据不同的语言来选择模板，就不用自己在费事添加一些文件了，而且还有自动补全功能，过滤文件再也不要复制文件名了。没有ignore file 可以右键项目New 出自动生成上面模板的 ignore file，已有ignore file 的话可以右键文件选择Add template…，也可以右键将向忽略的文件直接添加到ignore file 里。 2、Android ButterKnife Zelezny ButterKnife是一个专注于Android系统的View注入框架,可以减少大量的findViewById以及 setOnClickListener代码，可视化一键生成。 3、Android Parcelable code generator 快速实现Parcelable接口的插件。 4、Android Postfix Completion 可根据后缀快速完成代码。 5、Codota 该网站搜集了大量的代码，号称超过700W的代码实例。提供了chrome和as插件。 6、Dash Dash是一个API文档浏览器（ API Documentation Browser），以及代码片段管理工具（Code Snippet Manager）。安装此插件后，可以打开Dash客户端，如果Dash里多个API文档，默认打开Android。很多IDE都支持Dash，只要安装相应的插件即可。 7、DataBase Navigator 轻量级的，在Android Studio中使用的数据库可视化插件。_573.jpg) 8、GsonFormat GsonFormat是一个快速格式化json数据,自动生成实体类参数的插件。 9、Lifecycle Sorter 可以根据Activity或者fragment的生命周期对其生命周期方法位置进行先后排序。 10、Markdown Markdown是一种可以使用普通文本编辑器编写的标记语言，通过类似HTML的标记语法，它可以使普通文本内容具有一定的格式。","categories":[{"name":"Android","slug":"Android","permalink":"https://sword30021.github.io/blog/categories/Android/"},{"name":"开发工具","slug":"Android/开发工具","permalink":"https://sword30021.github.io/blog/categories/Android/开发工具/"},{"name":"Android Studio","slug":"Android/开发工具/Android-Studio","permalink":"https://sword30021.github.io/blog/categories/Android/开发工具/Android-Studio/"}],"tags":[{"name":"Android","slug":"Android","permalink":"https://sword30021.github.io/blog/tags/Android/"},{"name":"Android_tools","slug":"Android-tools","permalink":"https://sword30021.github.io/blog/tags/Android-tools/"}],"keywords":[{"name":"Android","slug":"Android","permalink":"https://sword30021.github.io/blog/categories/Android/"},{"name":"开发工具","slug":"Android/开发工具","permalink":"https://sword30021.github.io/blog/categories/Android/开发工具/"},{"name":"Android Studio","slug":"Android/开发工具/Android-Studio","permalink":"https://sword30021.github.io/blog/categories/Android/开发工具/Android-Studio/"}]},{"title":"Android-使用Intent打开各种文件","slug":"Android-使用Intent打开各种文件","date":"2016-09-22T07:52:08.000Z","updated":"2016-09-22T08:07:42.000Z","comments":true,"path":"2016/09/22/Android-使用Intent打开各种文件/","link":"","permalink":"https://sword30021.github.io/blog/blog/2016/09/22/Android-使用Intent打开各种文件/","excerpt":"","text":"1、打开Html文件 public static Intent getHtmlFileIntent( String param ) { Uri uri = Uri.parse(param ).buildUpon().encodedAuthority(&quot;com.android.htmlfileprovider&quot;).scheme(&quot;content&quot;).encodedPath(param ).build(); Intent intent = new Intent(&quot;android.intent.action.VIEW&quot;); intent.setDataAndType(uri, &quot;text/html&quot;); return intent; } 2、打开图片文件 public static Intent getImageFileIntent( String param ) { Intent intent = new Intent(&quot;android.intent.action.VIEW&quot;); intent.addCategory(&quot;android.intent.category.DEFAULT&quot;); intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); Uri uri = Uri.fromFile(new File(param )); intent.setDataAndType(uri, &quot;image/*&quot;); return intent; } 3、打开pdf文件 public static Intent getPdfFileIntent( String param ) { Intent intent = new Intent(&quot;android.intent.action.VIEW&quot;); intent.addCategory(&quot;android.intent.category.DEFAULT&quot;); intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); Uri uri = Uri.fromFile(new File(param )); intent.setDataAndType(uri, &quot;application/pdf&quot;); return intent; } 4、打开txt文件 public static Intent getTextFileIntent( String paramString, boolean paramBoolean) { Intent intent = new Intent(&quot;android.intent.action.VIEW&quot;); intent.addCategory(&quot;android.intent.category.DEFAULT&quot;); intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); if (paramBoolean) { Uri uri1 = Uri.parse(param ); intent.setDataAndType(uri1, &quot;text/plain&quot;); } while (true) { return intent; Uri uri2 = Uri.fromFile(new File(param )); intent.setDataAndType(uri2, &quot;text/plain&quot;); } } 5、打开音频文件 public static Intent getAudioFileIntent( String param ) { Intent intent = new Intent(&quot;android.intent.action.VIEW&quot;); intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP); intent.putExtra(&quot;oneshot&quot;, 0); intent.putExtra(&quot;configchange&quot;, 0); Uri uri = Uri.fromFile(new File(param )); intent.setDataAndType(uri, &quot;audio/*&quot;); return intent; } 6、打开视频文件 public static Intent getVideoFileIntent( String param ) { Intent intent = new Intent(&quot;android.intent.action.VIEW&quot;); intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP); intent.putExtra(&quot;oneshot&quot;, 0); intent.putExtra(&quot;configchange&quot;, 0); Uri uri = Uri.fromFile(new File(param )); intent.setDataAndType(uri, &quot;video/*&quot;); return intent; } 7、打开chm文件 public static Intent getChmFileIntent( String param ) { Intent intent = new Intent(&quot;android.intent.action.VIEW&quot;); intent.addCategory(&quot;android.intent.category.DEFAULT&quot;); intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); Uri uri = Uri.fromFile(new File(param )); intent.setDataAndType(uri, &quot;application/x-chm&quot;); return intent; } 8、打开word文件 public static Intent getWordFileIntent( String param ) { Intent intent = new Intent(&quot;android.intent.action.VIEW&quot;); intent.addCategory(&quot;android.intent.category.DEFAULT&quot;); intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); Uri uri = Uri.fromFile(new File(param )); intent.setDataAndType(uri, &quot;application/msword&quot;); return intent; } 9、打开Excel文件 public static Intent getExcelFileIntent( String param ) { Intent intent = new Intent(&quot;android.intent.action.VIEW&quot;); intent.addCategory(&quot;android.intent.category.DEFAULT&quot;); intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); Uri uri = Uri.fromFile(new File(param )); intent.setDataAndType(uri, &quot;application/vnd.ms-excel&quot;); return intent; } 10、打开ppt文件 public static Intent getPptFileIntent( String param ) { Intent intent = new Intent(&quot;android.intent.action.VIEW&quot;); intent.addCategory(&quot;android.intent.category.DEFAULT&quot;); intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); Uri uri = Uri.fromFile(new File(param )); intent.setDataAndType(uri, &quot;application/vnd.ms-powerpoint&quot;); return intent; }","categories":[{"name":"Android","slug":"Android","permalink":"https://sword30021.github.io/blog/categories/Android/"},{"name":"开发知识","slug":"Android/开发知识","permalink":"https://sword30021.github.io/blog/categories/Android/开发知识/"},{"name":"Other","slug":"Android/开发知识/Other","permalink":"https://sword30021.github.io/blog/categories/Android/开发知识/Other/"}],"tags":[{"name":"Android","slug":"Android","permalink":"https://sword30021.github.io/blog/tags/Android/"},{"name":"Android_Intent","slug":"Android-Intent","permalink":"https://sword30021.github.io/blog/tags/Android-Intent/"}],"keywords":[{"name":"Android","slug":"Android","permalink":"https://sword30021.github.io/blog/categories/Android/"},{"name":"开发知识","slug":"Android/开发知识","permalink":"https://sword30021.github.io/blog/categories/Android/开发知识/"},{"name":"Other","slug":"Android/开发知识/Other","permalink":"https://sword30021.github.io/blog/categories/Android/开发知识/Other/"}]},{"title":"Android-EditText属性大全","slug":"Android-EditText属性大全","date":"2016-09-22T07:40:52.000Z","updated":"2016-09-22T08:07:32.000Z","comments":true,"path":"2016/09/22/Android-EditText属性大全/","link":"","permalink":"https://sword30021.github.io/blog/blog/2016/09/22/Android-EditText属性大全/","excerpt":"","text":"EditText继承关系：View–&gt;TextView–&gt;EditText EditText的属性很多，这里介绍几个： android:hint=”请输入数字！” 设置显示在空间上的提示信息 android:numeric=”integer” 设置只能输入整数，如果是小数则是：decimal android:singleLine=”true” 设置单行输入，一旦设置为true，则文字不会自动换行。 android:password=”true” 设置只能输入密码 android:textColor = “#ff8c00” 字体颜色 android:textStyle=”bold” 字体，bold, italic, bolditalic android:textSize=”20dip” 大小 android:capitalize = “characters” 以大写字母写 android:textAlign=”center” EditText没有这个属性，但TextView有，居中&gt;android:textColorHighlight=”#cccccc” 被选中文字的底色，默认为蓝色 android:textColorHint=”#ffff00” 设置提示信息文字的颜色，默认为灰色 android:textScaleX=”1.5” 控制字与字之间的间距 android:typeface=”monospace” 字型，normal, sans, serif, monospace android:background=”@null” 背景，这里没有，指透明 android:layout_weight=”1” 权重，控制控件之间的地位,在控制控件显示的大小时蛮有用的。 android:textAppearance=”?android:attr/textAppearanceLargeInverse” 文字外观 android:layout_gravity=”center_vertical” 设置控件显示的位置：默认top，这里居中显示 bottomandroid:gray=”top” 多行中指针在第一行第一位置 et.setSelection(et.length()); 调整光标到最后一行 android:autoText 自动拼写帮助 android:capitalize 首字母大写 android:digits 设置只接受某些数字 android:singleLine 是否单行或者多行，回车是离开文本框还是文本框增加新行 android:numeric 只接受数字 android:phoneNumber 输入电话号码 android:editable 是否可编辑 android:autoLink=”all” 设置文本超链接样式当点击网址时，跳向该网址 android:textAppearance=”?android:attr/textAppearanceLargeInverse” 文字外观，这里引用的系统自带的一个外观，？表示系统是否有这种外观，否则使用默认的外观，可设置的值如下：textAppearanceButton/textAppearanceInverse/textAppearanceLarge/textAppearanceLargeInverse/textAppearanceMedium/textAppearanceMediumInverse。 android:autoLink 设置是否当文本为URL链接/email/电话号码/map时，文本显示为可点击的链接。可选值(none/web/email/phone/map/all) android:autoText 如果设置，将自动执行输入值的拼写纠正。此处无效果，在显示输入法并输入的时候起作用。 android:bufferType 指定getText()方式取得的文本类别。选项editable 类似于StringBuilder可追加字符，也就是说getText后可调用append方法设置文本内容。spannable 则可在给定的字符区域使用样式。 android:capitalize 设置英文字母大写类型。此处无效果，需要弹出输入法才能看得到。 android:cursorVisible 设定光标为显示/隐藏，默认显示。 android:digits 设置允许输入哪些字符。如“1234567890.+-*/% ()” android:drawableBottom 在text的下方输出一个drawable，如图片。如果指定一个颜色的话会把text的背景设为该颜色，并且同时和background使用时覆盖后者。 android:drawableLeft 在text的左边输出一个drawable，如图片。 android:drawablePadding 设置text与drawable(图片)的间隔，与drawableLeft、drawableRight、drawableTop、drawableBottom一起使用，可设置为负数，单独使用没有效果。 android:drawableRight 在text的右边输出一个drawable，如图片。 android:drawableTop 在text的正上方输出一个drawable，如图片。 android:ellipsize 设置当文字过长时,该控件该如何显示。有如下值设置：”start”—?省略号显示在开头;”end”——省略号显示在结尾;”middle”—-省略号显示在中间;”marquee” ——以跑马灯的方式显示(动画横向移动); android:freezesText 设置保存文本的内容以及光标的位置。 android:gravity 设置文本位置，如设置成“center”，文本将居中显示。 android:hintText 为空时显示的文字提示信息，可通过textColorHint设置提示信息的颜色。此属性在EditView中使用，但是这里也可以用。 android:imeOptions 附加功能，设置右下角IME动作与编辑框相关的动作，如actionDone右下角将显示一个“完成”，而不设置默认是一个回车符号。 android:imeActionId 设置IME动作ID。 android:imeActionLabel 设置IME动作标签。 android:includeFontPadding 设置文本是否包含顶部和底部额外空白，默认为true。 android:inputMethod 为文本指定输入法，需要完全限定名(完整的包名)。例如：com.google.android.inputmethod.pinyin android:inputType 设置文本的类型，用于帮助输入法显示合适的键盘类型。 android:linksClickable 设置链接是否点击连接，即使设置了autoLink。 android:marqueeRepeatLimit 在ellipsize指定marquee的情况下，设置重复滚动的次数，当设置为marquee_forever时表示无限次。 android:ems 设置TextView的宽度为N个字符的宽度。这里测试为一个汉字字符宽度，android:maxEms设置TextView的宽度为最长为N个字符的宽度。与ems同时使用时覆盖ems选项。android:minEms设置TextView的宽度为最短为N个字符的宽度。与ems同时使用时覆盖ems选项。 android:maxLength 限制显示的文本长度，超出部分不显示。 android:lines 设置文本的行数，设置两行就显示两行，即使第二行没有数据。 android:maxLines 设置文本的最大显示行数，与width或者layout_width结合使用，超出部分自动换行，超出行数将不显示。 android:minLines 设置文本的最小行数，与lines类似。 android:lineSpacingExtra 设置行间距。 android:lineSpacingMultiplier 设置行间距的倍数。如”1.2” android:numeric 如果被设置，该TextView有一个数字输入法。 android:password 以小点”.”显示文本 android:phoneNumber 设置为电话号码的输入方式。 android:scrollHorizontally 设置文本超出TextView的宽度的情况下，是否出现横拉条。 android:selectAllOnFocus 如果文本是可选择的，让他获取焦点而不是将光标移动为文本的开始位置或者末尾位置。 android:shadowColor 指定文本阴影的颜色，需要与shadowRadius一起使用。 android:shadowDx 设置阴影横向坐标开始位置。 android:shadowDy 设置阴影纵向坐标开始位置。 android:shadowRadius 设置阴影的半径。设置为0.1就变成字体的颜色了，一般设置为3.0的效果比较好。 android:singleLine 设置单行显示。如果和layoutwidth一起使用，当文本不能全部显示时，后面用“…”来表示。如android:text=”test singleLine “，android:singleLine=”true” android:layout_width=”20dp”将只显示“t…”。如果不设置singleLine或者设置为false，文本将自动换行android:shadowDx设置阴影横向坐标开始位置。 android:shadowDy 设置阴影纵向坐标开始位置。 android:typeface 设置文本字体，必须是以下常量值之一：normal 0, sans 1, serif 2, monospace(等宽字体) 3] android:height 设置文本区域的高度，支持度量单位：px(像素)/dp/sp/in/mm(毫米) android:maxHeight 设置文本区域的最大高度 android:minHeight 设置文本区域的最小高度 android:width 设置文本区域的宽度，支持度量单位：px(像素)/dp/sp/in/mm(毫米)，与layout_width的区别看这里。 android:maxWidth 设置文本区域的最大宽度 android:minWidth 设置文本区域的最小宽度","categories":[{"name":"Android","slug":"Android","permalink":"https://sword30021.github.io/blog/categories/Android/"},{"name":"开发知识","slug":"Android/开发知识","permalink":"https://sword30021.github.io/blog/categories/Android/开发知识/"},{"name":"Android控件","slug":"Android/开发知识/Android控件","permalink":"https://sword30021.github.io/blog/categories/Android/开发知识/Android控件/"}],"tags":[{"name":"Android","slug":"Android","permalink":"https://sword30021.github.io/blog/tags/Android/"},{"name":"Android_EditText","slug":"Android-EditText","permalink":"https://sword30021.github.io/blog/tags/Android-EditText/"}],"keywords":[{"name":"Android","slug":"Android","permalink":"https://sword30021.github.io/blog/categories/Android/"},{"name":"开发知识","slug":"Android/开发知识","permalink":"https://sword30021.github.io/blog/categories/Android/开发知识/"},{"name":"Android控件","slug":"Android/开发知识/Android控件","permalink":"https://sword30021.github.io/blog/categories/Android/开发知识/Android控件/"}]},{"title":"Android-res/raw/assets存放资源的限制和读取方式","slug":"Android-res-raw-assets存放资源的限制和读取方式","date":"2016-09-22T06:15:02.000Z","updated":"2016-09-22T08:07:05.000Z","comments":true,"path":"2016/09/22/Android-res-raw-assets存放资源的限制和读取方式/","link":"","permalink":"https://sword30021.github.io/blog/blog/2016/09/22/Android-res-raw-assets存放资源的限制和读取方式/","excerpt":"","text":"res/raw和assets的相同点 两者目录下的文件在打包后会原封不动的保存在apk包中，不会被编译成二进制文件。 res/raw和assets的不同点 res/raw中的文件会被映射到R.java文件中，访问的时候直接使用资源ID即R.id.filename；assets文件夹下的文件不会被映射到R.java中，访问的时候需要使用AssetManager类。 res/raw文件下不可以新建目录结构，而assets则可以自定义目录结构，也就是assets目录下可以再建立文件夹。 读取文件资源 1.读取res/raw下的文件资源，通过以下方式获取输入流来进行写操作: InputStream is = getResources().openRawResource(R.id.filename); 2.读取assets下的文件资源，通过以下方式获取输入流来进行写操作: AssetManager am = null ; am = getAssets(); InputStream is = am.open(&quot;filename&quot;); 3.获取assets下的文件列表 String[] files = getAssets().list(&quot;&quot;); Android 对asset与raw的限制 在读取这两个资源文件夹中的文件时会有一定的限制，即单个文件大小不能超过1M ，如果读取超过1M的文件会报 “Data exceeds UNCOMPRESS_DATA_MAX (1314625 vs 1048576)” 的IOException。","categories":[{"name":"Android","slug":"Android","permalink":"https://sword30021.github.io/blog/categories/Android/"},{"name":"开发知识","slug":"Android/开发知识","permalink":"https://sword30021.github.io/blog/categories/Android/开发知识/"},{"name":"Other","slug":"Android/开发知识/Other","permalink":"https://sword30021.github.io/blog/categories/Android/开发知识/Other/"}],"tags":[{"name":"Android","slug":"Android","permalink":"https://sword30021.github.io/blog/tags/Android/"},{"name":"Android_Resource","slug":"Android-Resource","permalink":"https://sword30021.github.io/blog/tags/Android-Resource/"}],"keywords":[{"name":"Android","slug":"Android","permalink":"https://sword30021.github.io/blog/categories/Android/"},{"name":"开发知识","slug":"Android/开发知识","permalink":"https://sword30021.github.io/blog/categories/Android/开发知识/"},{"name":"Other","slug":"Android/开发知识/Other","permalink":"https://sword30021.github.io/blog/categories/Android/开发知识/Other/"}]}]}